local filtergc = (function() local getgc=getgc or get_gc_objects;local getinfo=getinfo or debug and(debug.getinfo or debug.info)local getconstants=debug and debug.getconstants or getconstants or getconsts;local getupvalues=debug and debug.getupvalues or getupvalues or getupvals;local isexecutorclosure=isexecutorclosure or is_synapse_function;local getrawmetatable=getrawmetatable or debug and debug.getmetatable or function()return setmetatable({},{})end;local a,b=table.insert,function(c,d)for e,f in next,c do if f==d then return f end end end;local g={["function"]=function(h,i)local j,k,l,m=i.Name,i.Constants or{},i.Upvalues or{},(i.IgnoreSyn==nil or i.IgnoreExec==nil)and true or false;local n,o,p,q=getinfo(h).name,islclosure(h)and getconstants(h)or{},getupvalues(h)or{},isexecutorclosure(h)if m and q then return false end;if j and n and j~=n then return false end;for e,d in next,k do if not b(o,d)then return false end end;for e,d in next,l do if not b(p,d)then return false end end;return true end,["table"]=function(h,i)local r,s,t,u=i.Keys or{},i.Values or{},i.KeyValuePairs or{},i.Metatable or{}local v=getrawmetatable(h)if v then for w,d in next,v do if u[w]~=d then return false end end end;for e,d in next,r do if not h[d]then return false end end;for e,d in next,s do if not b(h,d)then return false end end;for w,d in next,t do local x=h[w]if x~=d then return false end end;return true end}return filtergc or getgc and function(y,i,z)local A={}for e,d in next,getgc(true)do if type(d)==y then if g[y](d,i)then if z then return d end;a(A,d)end end end;return A end or function()return"filtergc unsupported"end end)()
